import { API_URL, AUTH } from '@/config'
import { User } from '@/models/api'
import {
  AfterCallback,
  HandlerError,
  Session,
  handleAuth,
  handleCallback,
  handleLogin,
} from '@auth0/nextjs-auth0'
import axios from 'axios'
import { NextApiRequest, NextApiResponse } from 'next'

const afterCallback: AfterCallback = async (
  req: NextApiRequest,
  res: NextApiResponse,
  session: Session,
) => {
  const { user: auth0User, accessToken: token } = session
  try {
    const response = await axios.post(`${API_URL}/auth/login`, auth0User, {
      headers: {
        'Content-Type': 'application/json',
        Authorization: `Bearer ${token}`,
      },
    })

    const user: User = response.data
    const sessionUser: User = {
      ...auth0User,
      ...user,
    }
    console.log('API call successful. Session user:', sessionUser)
    session.user = sessionUser
    return session
  } catch (e: unknown) {
    const error = e as Error
    console.error(error)
    // Instead of sending a response here, we'll throw the error
    throw error
  }
}

export default handleAuth({
  login: handleLogin({
    authorizationParams: {
      scope: AUTH.scope,
      audience: AUTH.audience,
    },
  }),
  signup: handleLogin({
    authorizationParams: {
      scope: AUTH.scope,
      audience: AUTH.audience,
      screen_hint: 'signup',
    },
  }),
  callback: handleCallback({ afterCallback }),
  async onError(
    req: NextApiRequest,
    res: NextApiResponse,
    error: HandlerError,
  ) {
    console.error({ error })
    if (!res.headersSent) {
      res.writeHead(302, {
        Location: `/auth/error?message=${encodeURIComponent(error.message)}`,
      })
      res.end()
    }
  },
})
